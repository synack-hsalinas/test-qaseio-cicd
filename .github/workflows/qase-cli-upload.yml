name: Qase Jest Tests - CLI Upload
on:
  workflow_dispatch:
    inputs:
      qase_api_base_url:
        description: "Qase API URL"
        required: true
        default: "https://app.qase.io/api/v1"
      qase_report:
        description: "Enabled/disabled reporting to Qase"
        required: true
        type: boolean
      qase_project_code:
        description: "Qase project code"
        required: true
        default: "DEMO"
      qase_run_complete:
        description: "Qase Run autocomplete"
        required: true
        default: true
        type: boolean
env:
  QASE_API_BASE_URL: ${{ inputs.qase_api_base_url }}
  QASE_TESTOPS_PROJECT: ${{ inputs.qase_project_code }}
  QASE_TESTOPS_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm install
      - name: Install Qase CLI (qasectl)
        run: |
          # Install qasectl using Go
          go install github.com/qase-tms/qasectl@latest
          # Add Go binary path to current shell session
          export PATH=$PATH:$HOME/go/bin
          # Debug: Verify PATH and binary
          echo "PATH is: $PATH"
          ls -l $HOME/go/bin/qasectl || echo "qasectl binary not found"
          # Add to GITHUB_PATH for subsequent steps
          echo "$HOME/go/bin" >> $GITHUB_PATH
          # Verify installation
          qasectl --help || { echo "qasectl installation failed"; exit 1; }
      - name: Set QASE_TESTOPS_RUN_COMPLETE
        run: |
          # Convert string "1" or "0" to boolean true/false
          if [ "${{ inputs.qase_run_complete }}" = "1" ]; then
            echo "QASE_TESTOPS_RUN_COMPLETE=true" >> $GITHUB_ENV
          else
            echo "QASE_TESTOPS_RUN_COMPLETE=false" >> $GITHUB_ENV
          fi
      - name: Create Qase Test Run
        run: |
          RUN_TITLE="CLI Automated Run $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          RESPONSE=$(qasectl testops run create \
            --project "$QASE_TESTOPS_PROJECT" \
            --token "$QASE_TESTOPS_API_TOKEN" \
            --title "$RUN_TITLE")
          echo "RESPONSE: $RESPONSE"
          RUN_ID=$(echo "$RESPONSE" | grep -oP 'Run created with ID: \K\d+')
          if [ -z "$RUN_ID" ]; then
            echo "Error: Failed to create test run"
            exit 1
          fi
          echo "QASE_TESTOPS_RUN_ID=$RUN_ID" >> $GITHUB_ENV
      - name: Run Tests
        run: npm test
      - name: Upload JUnit XML to Qase
        if: always()
        env:
          QASE_REPORT: ${{ inputs.qase_report }}
        run: |
          qasectl testops result upload \
            --token "$QASE_TESTOPS_API_TOKEN" \
            --project "$QASE_TESTOPS_PROJECT" \
            --id "$QASE_TESTOPS_RUN_ID" \
            --path reports/junit.xml \
            --format junit
      - name: Upload JUnit Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: reports/junit.xml
